import{_ as t,c as o,a,e as i,d as n,b as l,w as r,r as d,o as p}from"./app-C7Rm6vR6.js";const c={};function u(h,e){const s=d("RouteLink");return p(),o("div",null,[e[4]||(e[4]=a("h1",{id:"windows",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#windows"},[a("span",null,"Windows")])],-1)),e[5]||(e[5]=a("p",null,[n("First install python from "),a("a",{href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"},"here"),n(" Click the python download button and follow the install process for the installer. #TODO add Pictures and make sure path is here")],-1)),e[6]||(e[6]=a("p",null,"Windows is a little bit more complicated to setup your virtual enviorment for. If you are using an IDE like pycharm, you shouldn't have to worry about this process.",-1)),a("p",null,[e[1]||(e[1]=n("I would recomend using a bash-like command line interface that would work well with windows or install a WSL (windows subsystem for linux) Virtual Machine. Use ",-1)),e[2]||(e[2]=a("a",{href:"https://learn.microsoft.com/en-us/windows/wsl/install",target:"_blank",rel:"noopener noreferrer"},"this link",-1)),e[3]||(e[3]=n("and follow the instructions to install wsl. This will allow you to use The linux install instructions ",-1)),l(s,{to:"/Installing/Linux.html"},{default:r(()=>[...e[0]||(e[0]=[n("here",-1)])]),_:1})]),e[7]||(e[7]=i(`<p>Doing this process on windows does require you to allow permissions for a script to opperate. if you are not comfortable with this i would go through the instructions to install WSL and follow the linux install instructions linked above.</p><h1 id="now-the-setup" tabindex="-1"><a class="header-anchor" href="#now-the-setup"><span>Now the setup</span></a></h1><p>First lets figure out how we want the project structured. Personally i would create a folder on our <code>C:</code> drive called School. and in that folder we can create a folder for our class called CS1030. The directory should look like <code>C:\\School\\CS1030\\Projects</code>. This is where we will create our projects for the class.</p><p>Now create a folder for our portfolio, name it as such as well. This folder will be the place where all of our portfolio will be held.</p><p>now if you right click in the empty folder you can open in terminal, this just opens a terminal in that directory.</p><p>To create our Virtual Enviorment we run the command</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line">py <span class="token operator">-</span>m venv djvenv</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This creates the virtual enviroment, it might take a second so let it run till we return to the termnial. now is when we allow for scripts to be ran in this powershell. If you don&#39;t want to be forced to do this every time you run powershell, you can run powershell as admin or use a bash interface, such as WSL.</p><p>you can run</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line"><span class="token function">Set-ExecutionPolicy</span> Unrestricted <span class="token operator">-</span>Scope <span class="token keyword">Process</span></span>
<span class="line"><span class="token punctuation">.</span>\\\\djvenv\\Scripts\\activate<span class="token punctuation">.</span>ps1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>This just runs a script for powershell that puts your powershell to use that virtual enviroment.</p><p>#TODO add picture of what this looks like</p><p>This is where we can now run python commands and starting installing python for our install:</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line">py <span class="token operator">-</span>m pip install django</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>you will be prompted to upgrade pip so run the commany</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line">python<span class="token punctuation">.</span>exe <span class="token operator">-</span>m pip install <span class="token operator">--</span>upgrade pip</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>to update your pip.</p><p>now lets look into getting your python project setup. you can run <code>django-admin startproject django_project</code> to create your project, we will end up moving files so the project makes more sense.</p><p>You will move all contents in the django_project folder into our project folder. Your Project Directory will look like this:</p><p>#TODO Add old and new pictures of what it should look like.</p><p>Lets add the next we run</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line">django-admin startapp portfolio_app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Portfolio app will be our project we create first.</p><p>Now Run this command</p><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line">py manage<span class="token punctuation">.</span>py runserver</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can open <a href="http://localhost:8000/" target="_blank" rel="noopener noreferrer">http://localhost:8000/</a>to see if the server is now running!</p>`,26))])}const w=t(c,[["render",u]]),g=JSON.parse('{"path":"/Installing/Windows.html","title":"Windows","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1758329447000,"contributors":[{"name":"AdenPotato","username":"AdenPotato","email":"adenkappa403@gmail.com","commits":9,"url":"https://github.com/AdenPotato"}],"changelog":[{"hash":"bad458255fa5cc507920c615c267893df2ada30a","time":1758329447000,"email":"AdenKappa403@gmail.com","author":"AdenPotato","message":"fixing windows on here, add adding dev caching"},{"hash":"43bd6eae1e888b277a6a4a24e7a8df2e2c92efa4","time":1758329186000,"email":"AdenKappa403@gmail.com","author":"AdenPotato","message":"added my meta data for the page, it will fix it after i push"},{"hash":"edd46ba2ec75b65a3e7fa13bf57baee14880f036","time":1757958920000,"email":"adenkappa403@gmail.com","author":"AdenPotato","message":"working sidebar"},{"hash":"99672a2f3931879836c55395684d4f64b751daed","time":1757955991000,"email":"adenkappa403@gmail.com","author":"AdenPotato","message":"changing file name and adding file structure"},{"hash":"fe82e9c805b1b3b504a3a5d1bf01684a31bcf378","time":1757533836000,"email":"AdenKappa403@gmail.com","author":"AdenPotato","message":"adding more to windows docs"},{"hash":"882a9dc36787d3eeea9312478908a494c67d73b0","time":1757533585000,"email":"AdenKappa403@gmail.com","author":"AdenPotato","message":"finished windows instructions"},{"hash":"fb8ddb2d0df1ecc98546030b7aa05afd1c73c227","time":1757532527000,"email":"AdenKappa403@gmail.com","author":"AdenPotato","message":"starting windows instructions"},{"hash":"04af37e1bbdeee5bb2160e83c5c0ccad8dd76054","time":1757528715000,"email":"AdenKappa403@gmail.com","author":"AdenPotato","message":"Started platform docs and stated project wants"},{"hash":"71c38394eeb37c25f901ad3b10072224f625f539","time":1757369594000,"email":"adenkappa403@gmail.com","author":"AdenPotato","message":"batman"}]},"filePathRelative":"Installing/Windows.md"}');export{w as comp,g as data};
